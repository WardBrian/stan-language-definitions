# This file is semicolon delimited
StanFunction; Arguments; ReturnType
Phi; (T x); R
Phi_approx; (T x); R
abs; (T x); T
abs; (complex z); real
acos; (T x); R
acos; (complex z); complex
acosh; (T x); R
acosh; (complex z); complex
add_diag; (complex_matrix m, complex_real d); complex_matrix
add_diag; (complex_matrix m, complex_row_vector d); complex_matrix
add_diag; (complex_matrix m, complex_vector d); complex_matrix
add_diag; (matrix m, real d); matrix
add_diag; (matrix m, row_vector d); matrix
add_diag; (matrix m, vector d); matrix
algebra_solver; (function algebra_system, vector y_guess, vector theta, data array[] real x_r, array[] int x_i, data real rel_tol, data real f_tol, int max_steps); vector
algebra_solver_newton; (function algebra_system, vector y_guess, vector theta, data array[] real x_r, array[] int x_i); vector
algebra_solver_newton; (function algebra_system, vector y_guess, vector theta, data array[] real x_r, array[] int x_i, data real rel_tol, data real f_tol, int max_steps); vector
append_array; (T x, T y); T
append_col; (complex x, complex_row_vector y); complex_row_vector
append_col; (complex_matrix x, complex_matrix y); complex_matrix
append_col; (complex_matrix x, complex_vector y); complex_matrix
append_col; (complex_row_vector x, complex y); complex_row_vector
append_col; (complex_row_vector x, complex_row_vector y); complex_row_vector
append_col; (complex_vector x, complex_matrix y); complex_matrix
append_col; (complex_vector x, complex_vector y); complex_matrix
append_col; (matrix x, matrix y); matrix
append_col; (matrix x, vector y); matrix
append_col; (real x, row_vector y); row_vector
append_col; (row_vector x, real y); row_vector
append_col; (row_vector x, row_vector y); row_vector
append_col; (vector x, matrix y); matrix
append_col; (vector x, vector y); matrix
append_row; (complex x, complex_vector y); complex_vector
append_row; (complex_matrix x, complex_matrix y); complex_matrix
append_row; (complex_matrix x, complex_row_vector y); complex_matrix
append_row; (complex_row_vector x, complex_matrix y); complex_matrix
append_row; (complex_row_vector x, complex_row_vector y); complex_matrix
append_row; (complex_vector x, complex y); complex_vector
append_row; (complex_vector x, complex_vector y); complex_vector
append_row; (matrix x, matrix y); matrix
append_row; (matrix x, row_vector y); matrix
append_row; (real x, vector y); vector
append_row; (row_vector x, matrix y); matrix
append_row; (row_vector x, row_vector y); matrix
append_row; (vector x, real y); vector
append_row; (vector x, vector y); vector
arg; (complex z); real
asin; (T x); R
asin; (complex z); complex
asinh; (T x); R
asinh; (complex z); complex
atan2; (real y, real x); real
atan; (T x); R
atan; (complex z); complex
atanh; (T x); R
atanh; (complex z); complex
bernoulli; ~; real
bernoulli_cdf; (ints y, reals theta); real
bernoulli_lccdf; (ints y | reals theta); real
bernoulli_lcdf; (ints y | reals theta); real
bernoulli_logit; ~; real
bernoulli_logit_glm; ~; real
bernoulli_logit_glm_lpmf; (array[] int y | matrix x, real alpha, vector beta); real
bernoulli_logit_glm_lpmf; (array[] int y | matrix x, vector alpha, vector beta); real
bernoulli_logit_glm_lpmf; (array[] int y | row_vector x, real alpha, vector beta); real
bernoulli_logit_glm_lpmf; (array[] int y | row_vector x, vector alpha, vector beta); real
bernoulli_logit_glm_lpmf; (int y | matrix x, real alpha, vector beta); real
bernoulli_logit_glm_lpmf; (int y | matrix x, vector alpha, vector beta); real
bernoulli_logit_glm_lupmf; (array[] int y | matrix x, real alpha, vector beta); real
bernoulli_logit_glm_lupmf; (array[] int y | matrix x, vector alpha, vector beta); real
bernoulli_logit_glm_lupmf; (array[] int y | row_vector x, real alpha, vector beta); real
bernoulli_logit_glm_lupmf; (array[] int y | row_vector x, vector alpha, vector beta); real
bernoulli_logit_glm_lupmf; (int y | matrix x, real alpha, vector beta); real
bernoulli_logit_glm_lupmf; (int y | matrix x, vector alpha, vector beta); real
bernoulli_logit_glm_rng; (matrix x, vector alpha, vector beta); array[] int
bernoulli_logit_glm_rng; (row_vector x, vector alpha, vector beta); array[] int
bernoulli_logit_lpmf; (ints y | reals alpha); real
bernoulli_logit_lupmf; (ints y | reals alpha); real
bernoulli_logit_rng; (reals alpha); R
bernoulli_lpmf; (ints y | reals theta); real
bernoulli_lupmf; (ints y | reals theta); real
bernoulli_rng; (reals theta); R
bessel_first_kind; (T1 x, T2 y); R
bessel_first_kind; (int v, real x); real
bessel_second_kind; (T1 x, T2 y); R
bessel_second_kind; (int v, real x); real
beta; (T1 x, T2 y); R
beta; (real alpha, real beta); real
beta; ~; real
beta_binomial; ~; real
beta_binomial_cdf; (ints n, ints N, reals alpha, reals beta); real
beta_binomial_lccdf; (ints n | ints N, reals alpha, reals beta); real
beta_binomial_lcdf; (ints n | ints N, reals alpha, reals beta); real
beta_binomial_lpmf; (ints n | ints N, reals alpha, reals beta); real
beta_binomial_lupmf; (ints n | ints N, reals alpha, reals beta); real
beta_binomial_rng; (ints N, reals alpha, reals beta); R
beta_cdf; (reals theta, reals alpha, reals beta); real
beta_lccdf; (reals theta | reals alpha, reals beta); real
beta_lcdf; (reals theta | reals alpha, reals beta); real
beta_lpdf; (reals theta | reals alpha, reals beta); real
beta_lupdf; (reals theta | reals alpha, reals beta); real
beta_proportion; ~; real
beta_proportion_lccdf; (reals theta | reals mu, reals kappa); real
beta_proportion_lcdf; (reals theta | reals mu, reals kappa); real
beta_proportion_lpdf; ~; real
beta_proportion_lupdf; ~; real
beta_proportion_rng; (reals mu, reals kappa); R
beta_rng; (reals alpha, reals beta); R
binary_log_loss; (T1 x, T2 y); R
binary_log_loss; (int y, real y_hat); real
binomial; ~; real
binomial_cdf; (ints n, ints N, reals theta); real
binomial_coefficient_log; (T1 x, T2 y); R
binomial_coefficient_log; (real x, real y); real
binomial_lccdf; (ints n | ints N, reals theta); real
binomial_lcdf; (ints n | ints N, reals theta); real
binomial_logit; ~; real
binomial_logit_lpmf; (ints n | ints N, reals alpha); real
binomial_logit_lupmf; (ints n | ints N, reals alpha); real
binomial_lpmf; (ints n | ints N, reals theta); real
binomial_lupmf; (ints n | ints N, reals theta); real
binomial_rng; (ints N, reals theta); R
block; (complex_matrix x, int i, int j, int n_rows, int n_cols); complex_matrix
block; (matrix x, int i, int j, int n_rows, int n_cols); matrix
categorical; ~; real
categorical_logit; ~; real
categorical_logit_glm; ~; real
categorical_logit_glm_lpmf; (array[] int y | matrix x, vector alpha, matrix beta); real
categorical_logit_glm_lpmf; (array[] int y | row_vector x, vector alpha, matrix beta); real
categorical_logit_glm_lpmf; (int y | matrix x, vector alpha, matrix beta); real
categorical_logit_glm_lpmf; (int y | row_vector x, vector alpha, matrix beta); real
categorical_logit_glm_lupmf; (array[] int y | matrix x, vector alpha, matrix beta); real
categorical_logit_glm_lupmf; (array[] int y | row_vector x, vector alpha, matrix beta); real
categorical_logit_glm_lupmf; (int y | matrix x, vector alpha, matrix beta); real
categorical_logit_glm_lupmf; (int y | row_vector x, vector alpha, matrix beta); real
categorical_logit_lpmf; (ints y | vector beta); real
categorical_logit_lupmf; (ints y | vector beta); real
categorical_logit_rng; (vector beta); int
categorical_lpmf; (ints y | vector theta); real
categorical_lupmf; (ints y | vector theta); real
categorical_rng; (vector theta); int
cauchy; ~; real
cauchy_cdf; (reals y, reals mu, reals sigma); real
cauchy_lccdf; (reals y | reals mu, reals sigma); real
cauchy_lcdf; (reals y | reals mu, reals sigma); real
cauchy_lpdf; (reals y | reals mu, reals sigma); real
cauchy_lupdf; (reals y | reals mu, reals sigma); real
cauchy_rng; (reals mu, reals sigma); R
cbrt; (T x); R
ceil; (T x); R
chi_square; ~; real
chi_square_cdf; (reals y, reals nu); real
chi_square_lccdf; (reals y | reals nu); real
chi_square_lcdf; (reals y | reals nu); real
chi_square_lpdf; (reals y | reals nu); real
chi_square_lupdf; (reals y | reals nu); real
chi_square_rng; (reals nu); R
chol2inv; (matrix L); matrix
cholesky_decompose; (matrix A); matrix
choose; (T1 x, T2 y); R
choose; (int x, int y); int
col; (complex_matrix x, int n); complex_vector
col; (matrix x, int n); vector
cols; (complex_matrix x); int
cols; (complex_row_vector x); int
cols; (complex_vector x); int
cols; (matrix x); int
cols; (row_vector x); int
cols; (vector x); int
columns_dot_product; (complex_matrix x, complex_matrix y); complex_row_vector
columns_dot_product; (complex_row_vector x, complex_row_vector y); complex_row_vector
columns_dot_product; (complex_vector x, complex_vector y); complex_row_vector
columns_dot_product; (matrix x, matrix y); row_vector
columns_dot_product; (row_vector x, row_vector y); row_vector
columns_dot_product; (vector x, vector y); row_vector
columns_dot_self; (complex_matrix x); complex_row_vector
columns_dot_self; (complex_row_vector x); complex_row_vector
columns_dot_self; (complex_vector x); complex_row_vector
columns_dot_self; (matrix x); row_vector
columns_dot_self; (row_vector x); row_vector
columns_dot_self; (vector x); row_vector
complex_schur_decompose_t; (complex_matrix A); complex_matrix
complex_schur_decompose_t; (matrix A); complex_matrix
complex_schur_decompose_u; (complex_matrix A); complex_matrix
complex_schur_decompose_u; (matrix A); complex_matrix
conj; (Z z); Z
conj; (complex z); complex
cos; (T x); R
cos; (complex z); complex
cosh; (T x); R
cosh; (complex z); complex
cov_exp_quad; (array[] real x, real alpha, real rho); matrix
cov_exp_quad; (array[] real x1, array[] real x2, real alpha, real rho); matrix
cov_exp_quad; (row_vectors x, real alpha, real rho); matrix
cov_exp_quad; (row_vectors x1, row_vectors x2, real alpha, real rho); matrix
cov_exp_quad; (vectors x, real alpha, real rho); matrix
cov_exp_quad; (vectors x1, vectors x2, real alpha, real rho); matrix
crossprod; (matrix x); matrix
csr_extract_u; (matrix a); array[] int
csr_extract_v; (matrix a); array[] int
csr_extract_w; (matrix a); vector
csr_matrix_times_vector; (int m, int n, vector w, array[] int v, array[] int u, vector b); vector
csr_to_dense_matrix; (int m, int n, vector w, array[] int v, array[] int u); matrix
cumulative_sum; (array[] complex x); array[] complex
cumulative_sum; (array[] int x); array[] int
cumulative_sum; (array[] real x); array[] real
cumulative_sum; (complex_row_vector rv); complex_row_vector
cumulative_sum; (complex_vector v); complex_vector
cumulative_sum; (row_vector rv); row_vector
cumulative_sum; (vector v); vector
dae; (function residual, vector initial_state, vector initial_state_derivative, data real initial_time, data array[] real times, ...); array[] vector
dae_tol; (function residual, vector initial_state, vector initial_state_derivative, data real initial_time, data array[] real times, data real rel_tol, data real abs_tol, int max_num_steps, ...); array[] vector
determinant; (matrix A); real
diag_matrix; (complex_vector x); complex_matrix
diag_matrix; (vector x); matrix
diag_post_multiply; (complex_matrix m, complex_row_vector v); complex_matrix
diag_post_multiply; (complex_matrix m, complex_vector v); complex_matrix
diag_post_multiply; (matrix m, row_vector rv); matrix
diag_post_multiply; (matrix m, vector v); matrix
diag_pre_multiply; (complex_row_vector v, complex_matrix m); complex_matrix
diag_pre_multiply; (complex_vector v, complex_matrix m); complex_matrix
diag_pre_multiply; (row_vector rv, matrix m); matrix
diag_pre_multiply; (vector v, matrix m); matrix
diagonal; (complex_matrix x); complex_vector
diagonal; (matrix x); vector
digamma; (T x); R
dims; (T x); array[] int
dirichlet; ~; real
dirichlet_lpdf; (vectors theta | vectors alpha); real
dirichlet_lupdf; (vectors theta | vectors alpha); real
dirichlet_rng; (vector alpha); vector
discrete_range; ~; real
discrete_range_cdf; (ints y, ints l, ints u); real
discrete_range_lccdf; (ints y | ints l, ints u); real
discrete_range_lcdf; (ints y | ints l, ints u); real
discrete_range_lpmf; (ints y | ints l, ints u); real
discrete_range_lupmf; (ints y | ints l, ints u); real
discrete_range_rng; (ints l, ints u); int
distance; (row_vector x, row_vector y); real
distance; (row_vector x, vector y); real
distance; (vector x, row_vector y); real
distance; (vector x, vector y); real
dot_product; (complex_row_vector x, complex_row_vector y); complex
dot_product; (complex_row_vector x, complex_vector y); complex
dot_product; (complex_vector x, complex_row_vector y); complex
dot_product; (complex_vector x, complex_vector y); complex
dot_product; (row_vector x, row_vector y); real
dot_product; (row_vector x, vector y); real
dot_product; (vector x, row_vector y); real
dot_product; (vector x, vector y); real
dot_self; (complex_row_vector x); complex
dot_self; (complex_vector x); complex
dot_self; (row_vector x); real
dot_self; (vector x); real
double_exponential; ~; real
double_exponential_cdf; (reals y, reals mu, reals sigma); real
double_exponential_lccdf; (reals y | reals mu, reals sigma); real
double_exponential_lcdf; (reals y | reals mu, reals sigma); real
double_exponential_lpdf; (reals y | reals mu, reals sigma); real
double_exponential_lupdf; (reals y | reals mu, reals sigma); real
double_exponential_rng; (reals mu, reals sigma); R
e; (); real
eigenvalues; (matrix A); complex_vector
eigenvalues_sym; (complex_matrix A); complex_vector
eigenvalues_sym; (matrix A); vector
eigenvectors; (matrix A); complex_matrix
eigenvectors_sym; (complex_matrix A); complex_matrix
eigenvectors_sym; (matrix A); matrix
erf; (T x); R
erfc; (T x); R
exp2; (T x); R
exp; (T x); R
exp; (complex z); complex
exp_mod_normal; ~; real
exp_mod_normal_cdf; (reals y, reals mu, reals sigma, reals lambda); real
exp_mod_normal_lccdf; (reals y | reals mu, reals sigma, reals lambda); real
exp_mod_normal_lcdf; (reals y | reals mu, reals sigma, reals lambda); real
exp_mod_normal_lpdf; (reals y | reals mu, reals sigma, reals lambda); real
exp_mod_normal_lupdf; (reals y | reals mu, reals sigma, reals lambda); real
exp_mod_normal_rng; (reals mu, reals sigma, reals lambda); R
expm1; (T x); R
exponential; ~; real
exponential_cdf; (reals y, reals beta); real
exponential_lccdf; (reals y | reals beta); real
exponential_lcdf; (reals y | reals beta); real
exponential_lpdf; (reals y | reals beta); real
exponential_lupdf; (reals y | reals beta); real
exponential_rng; (reals beta); R
fabs; (T x); R
falling_factorial; (T1 x, T2 y); R
falling_factorial; (real x, real n); real
fdim; (T1 x, T2 y); R
fdim; (real x, real y); real
fft2; (complex_matrix m); complex_matrix
fft; (complex_vector v); complex_vector
floor; (T x); R
fma; (real x, real y, real z); real
fmax; (T1 x, T2 y); R
fmax; (real x, real y); real
fmin; (T1 x, T2 y); R
fmin; (real x, real y); real
fmod; (T1 x, T2 y); R
fmod; (real x, real y); real
frechet; ~; real
frechet_cdf; (reals y, reals alpha, reals sigma); real
frechet_lccdf; (reals y | reals alpha, reals sigma); real
frechet_lcdf; (reals y | reals alpha, reals sigma); real
frechet_lpdf; (reals y | reals alpha, reals sigma); real
frechet_lupdf; (reals y | reals alpha, reals sigma); real
frechet_rng; (reals alpha, reals sigma); R
gamma; ~; real
gamma_cdf; (reals y, reals alpha, reals beta); real
gamma_lccdf; (reals y | reals alpha, reals beta); real
gamma_lcdf; (reals y | reals alpha, reals beta); real
gamma_lpdf; (reals y | reals alpha, reals beta); real
gamma_lupdf; (reals y | reals alpha, reals beta); real
gamma_p; (T1 x, T2 y); R
gamma_p; (real a, real z); real
gamma_q; (T1 x, T2 y); R
gamma_q; (real a, real z); real
gamma_rng; (reals alpha, reals beta); R
gaussian_dlm_obs; ~; real
gaussian_dlm_obs_lpdf; (matrix y | matrix F, matrix G, matrix V, matrix W, vector m0, matrix C0); real
gaussian_dlm_obs_lpdf; (matrix y | matrix F, matrix G, vector V, matrix W, vector m0, matrix C0); real
gaussian_dlm_obs_lupdf; (matrix y | matrix F, matrix G, matrix V, matrix W, vector m0, matrix C0); real
gaussian_dlm_obs_lupdf; (matrix y | matrix F, matrix G, vector V, matrix W, vector m0, matrix C0); real
generalized_inverse; (matrix A); matrix
get_imag; (T x); T
get_imag; (complex z); real
get_lp; (); real
get_real; (T x); T
get_real; (complex z); real
gumbel; ~; real
gumbel_cdf; (reals y, reals mu, reals beta); real
gumbel_lccdf; (reals y | reals mu, reals beta); real
gumbel_lcdf; (reals y | reals mu, reals beta); real
gumbel_lpdf; (reals y | reals mu, reals beta); real
gumbel_lupdf; (reals y | reals mu, reals beta); real
gumbel_rng; (reals mu, reals beta); R
head; (array[] T sv, int n); array[] T
head; (complex_row_vector rv, int n); complex_row_vector
head; (complex_vector v, int n); complex_vector
head; (row_vector rv, int n); row_vector
head; (vector v, int n); vector
hmm_hidden_state_prob; (matrix log_omega, matrix Gamma, vector rho); matrix
hmm_latent_rng; (matrix log_omega, matrix Gamma, vector rho); array[] int
hmm_marginal; (matrix log_omega, matrix Gamma, vector rho); real
hypergeometric; ~; real
hypergeometric_lpmf; (int n | int N, int a, int b); real
hypergeometric_lupmf; (int n | int N, int a, int b); real
hypergeometric_rng; (int N, int a, int2 b); int
hypot; (T1 x, T2 y); R
hypot; (real x, real y); real
identity_matrix; (int k); matrix
inc_beta; (real alpha, real beta, real x); real
int_step; (int x); int
int_step; (real x); int
integrate_1d; (function integrand, real a, real b, array[] real theta, array[] real x_r, array[] int x_i), real relative_tolerance); real
integrate_1d; (function integrand, real a, real b, array[] real theta, array[] real x_r, array[] int x_i); real
integrate_ode; (function ode, array[] real initial_state, real initial_time, array[] real times, array[] real theta, array[] real x_r, array[] int x_i); array[,] real
integrate_ode_adams; (function ode, array[] real initial_state, real initial_time, array[] real times, array[] real theta, array[] real x_r, array[] int x_i); array[,] real
integrate_ode_adams; (function ode, array[] real initial_state, real initial_time, array[] real times, array[] real theta, array[] real x_r, array[] int x_i, real rel_tol, real abs_tol, int max_num_steps); array[,] real
integrate_ode_bdf; (function ode, array[] real initial_state, real initial_time, array[] real times, array[] real theta, array[] real x_r, array[] int x_i); array[,] real
integrate_ode_bdf; (function ode, array[] real initial_state, real initial_time, array[] real times, array[] real theta, array[] real x_r, array[] int x_i, real rel_tol, real abs_tol, int max_num_steps); array[,] real
integrate_ode_rk45; (function ode, array[] real initial_state, real initial_time, array[] real times, array[] real theta, array[] real x_r, array[] int x_i); array[,] real
integrate_ode_rk45; (function ode, array[] real initial_state, real initial_time, array[] real times, array[] real theta, array[] real x_r, array[] int x_i, real rel_tol, real abs_tol, int max_num_steps); array[,] real
inv; (T x); R
inv_Phi; (T x); R
inv_chi_square; ~; real
inv_chi_square_cdf; (reals y, reals nu); real
inv_chi_square_lccdf; (reals y | reals nu); real
inv_chi_square_lcdf; (reals y | reals nu); real
inv_chi_square_lpdf; (reals y | reals nu); real
inv_chi_square_lupdf; (reals y | reals nu); real
inv_chi_square_rng; (reals nu); R
inv_cloglog; (T x); R
inv_erfc; (T x); R
inv_fft2; (complex_matrix m); complex_matrix
inv_fft; (complex_vector u); complex_vector
inv_gamma; ~; real
inv_gamma_cdf; (reals y, reals alpha, reals beta); real
inv_gamma_lccdf; (reals y | reals alpha, reals beta); real
inv_gamma_lcdf; (reals y | reals alpha, reals beta); real
inv_gamma_lpdf; (reals y | reals alpha, reals beta); real
inv_gamma_lupdf; (reals y | reals alpha, reals beta); real
inv_gamma_rng; (reals alpha, reals beta); R
inv_inc_beta; (real alpha, real beta, real p); real
inv_logit; (T x); R
inv_sqrt; (T x); R
inv_square; (T x); R
inv_wishart; ~; real
inv_wishart_cholesky_lpdf; (matrix L_W | real nu, matrix L_S); real
inv_wishart_cholesky_lupdf; (matrix L_W | real nu, matrix L_S); real
inv_wishart_cholesky_rng; (real nu, matrix L_S); matrix
inv_wishart_lpdf; (matrix W | real nu, matrix Sigma); real
inv_wishart_lupdf; (matrix W | real nu, matrix Sigma); real
inv_wishart_rng; (real nu, matrix Sigma); matrix
inverse; (matrix A); matrix
inverse_spd; (matrix A); matrix
is_inf; (real x); int
is_nan; (real x); int
lambert_w0; (reals x); R
lambert_wm1; (T x); R
lbeta; (T1 x, T2 y); R
lbeta; (real alpha, real beta); real
lchoose; (T1 x, T2 y); R
lchoose; (real x, real y); real
ldexp; (T1 x, T2 y); R
ldexp; (real x, int y); real
lgamma; (T x); R
linspaced_array; (int n, data real lower, data real upper); array[] real
linspaced_int_array; (int n, int lower, int upper); array[] real
linspaced_row_vector; (int n, data real lower, data real upper); row_vector
linspaced_vector; (int n, data real lower, data real upper); vector
lkj_corr; ~; real
lkj_corr_cholesky; ~; real
lkj_corr_cholesky_lpdf; (matrix L | real eta); real
lkj_corr_cholesky_lupdf; (matrix L | real eta); real
lkj_corr_cholesky_rng; (int K, real eta); matrix
lkj_corr_lpdf; (matrix y | real eta); real
lkj_corr_lupdf; (matrix y | real eta); real
lkj_corr_rng; (int K, real eta); matrix
lmgamma; (T1 x, T2 y); R
lmgamma; (int n, real x); real
lmultiply; (T1 x, T2 y); R
lmultiply; (real x, real y); real
log10; (); real
log10; (T x); R
log10; (complex z); complex
log1m; (T x); R
log1m_exp; (T x); R
log1m_inv_logit; (T x); R
log1p; (T x); R
log1p_exp; (T x); R
log2; (); real
log2; (T x); R
log; (T x); R
log; (complex z); complex
log_determinant; (matrix A); real
log_diff_exp; (T1 x, T2 y); R
log_diff_exp; (real x, real y); real
log_falling_factorial; (real x, real n); real
log_inv_logit; (T x); R
log_inv_logit_diff; (T1 x, T2 y); R
log_mix; (T1 theta, T2 lp1, T3 lp3); R
log_mix; (real theta, real lp1, real lp2); real
log_modified_bessel_first_kind; (T1 x, T2 y); R
log_modified_bessel_first_kind; (real v, real z); real
log_rising_factorial; (T1 x, T2 y); R
log_rising_factorial; (real x, real n); real
log_softmax; (vector x); vector
log_sum_exp; (array[] real x); real
log_sum_exp; (matrix x); real
log_sum_exp; (real x, real y); real
log_sum_exp; (row_vector x); real
log_sum_exp; (vector x); real
logistic; ~; real
logistic_cdf; (reals y, reals mu, reals sigma); real
logistic_lccdf; (reals y | reals mu, reals sigma); real
logistic_lcdf; (reals y | reals mu, reals sigma); real
logistic_lpdf; (reals y | reals mu, reals sigma); real
logistic_lupdf; (reals y | reals mu, reals sigma); real
logistic_rng; (reals mu, reals sigma); R
logit; (T x); R
loglogistic; ~; real
loglogistic_cdf; (reals y, reals alpha, reals beta); real
loglogistic_lpdf; (reals y | reals alpha, reals beta); real
loglogistic_rng; (reals mu, reals sigma); R
lognormal; ~; real
lognormal_cdf; (reals y, reals mu, reals sigma); real
lognormal_lccdf; (reals y | reals mu, reals sigma); real
lognormal_lcdf; (reals y | reals mu, reals sigma); real
lognormal_lpdf; (reals y | reals mu, reals sigma); real
lognormal_lupdf; (reals y | reals mu, reals sigma); real
lognormal_rng; (reals mu, reals sigma); R
machine_precision; (); real
map_rect; (F f, vector phi, array[] vector theta, data array[,] real x_r, data array[,] int x_i); vector
matrix_exp; (matrix A); matrix
matrix_exp_multiply; (matrix A, matrix B); matrix
matrix_power; (matrix A, int B); matrix
max; (array[] int x); int
max; (array[] real x); real
max; (int x, int y); int
max; (matrix x); real
max; (row_vector x); real
max; (vector x); real
mdivide_left_spd; (matrix A, matrix B); vector
mdivide_left_spd; (matrix A, vector b); matrix
mdivide_left_tri_low; (matrix A, matrix B); matrix
mdivide_left_tri_low; (matrix A, vector b); vector
mdivide_right_spd; (matrix B, matrix A); matrix
mdivide_right_spd; (row_vector b, matrix A); row_vector
mdivide_right_tri_low; (matrix B, matrix A); matrix
mdivide_right_tri_low; (row_vector b, matrix A); row_vector
mean; (array[] real x); real
mean; (matrix x); real
mean; (row_vector x); real
mean; (vector x); real
min; (array[] int x); int
min; (array[] real x); real
min; (int x, int y); int
min; (matrix x); real
min; (row_vector x); real
min; (vector x); real
modified_bessel_first_kind; (T1 x, T2 y); R
modified_bessel_first_kind; (int v, real z); real
modified_bessel_second_kind; (T1 x, T2 y); R
modified_bessel_second_kind; (int v, real z); real
multi_gp; ~; real
multi_gp_cholesky; ~; real
multi_gp_cholesky_lpdf; (matrix y | matrix L, vector w); real
multi_gp_cholesky_lupdf; (matrix y | matrix L, vector w); real
multi_gp_lpdf; (matrix y | matrix Sigma, vector w); real
multi_gp_lupdf; (matrix y | matrix Sigma, vector w); real
multi_normal; ~; real
multi_normal_cholesky; ~; real
multi_normal_cholesky_lpdf; (row_vectors y | row_vectors mu, matrix L); real
multi_normal_cholesky_lpdf; (row_vectors y | vectors mu, matrix L); real
multi_normal_cholesky_lpdf; (vectors y | row_vectors mu, matrix L); real
multi_normal_cholesky_lpdf; (vectors y | vectors mu, matrix L); real
multi_normal_cholesky_lupdf; (row_vectors y | row_vectors mu, matrix L); real
multi_normal_cholesky_lupdf; (row_vectors y | vectors mu, matrix L); real
multi_normal_cholesky_lupdf; (vectors y | row_vectors mu, matrix L); real
multi_normal_cholesky_lupdf; (vectors y | vectors mu, matrix L); real
multi_normal_cholesky_rng; (row_vector mu, matrix L); vector
multi_normal_cholesky_rng; (row_vectors mu, matrix L); vectors
multi_normal_cholesky_rng; (vector mu, matrix L); vector
multi_normal_cholesky_rng; (vectors mu, matrix L); vectors
multi_normal_lpdf; (row_vectors y | row_vectors mu, matrix Sigma); real
multi_normal_lpdf; (row_vectors y | vectors mu, matrix Sigma); real
multi_normal_lpdf; (vectors y | row_vectors mu, matrix Sigma); real
multi_normal_lpdf; (vectors y | vectors mu, matrix Sigma); real
multi_normal_lupdf; (row_vectors y | row_vectors mu, matrix Sigma); real
multi_normal_lupdf; (row_vectors y | vectors mu, matrix Sigma); real
multi_normal_lupdf; (vectors y | row_vectors mu, matrix Sigma); real
multi_normal_lupdf; (vectors y | vectors mu, matrix Sigma); real
multi_normal_prec; ~; real
multi_normal_prec_lpdf; (row_vectors y | row_vectors mu, matrix Omega); real
multi_normal_prec_lpdf; (row_vectors y | vectors mu, matrix Omega); real
multi_normal_prec_lpdf; (vectors y | row_vectors mu, matrix Omega); real
multi_normal_prec_lpdf; (vectors y | vectors mu, matrix Omega); real
multi_normal_prec_lupdf; (row_vectors y | row_vectors mu, matrix Omega); real
multi_normal_prec_lupdf; (row_vectors y | vectors mu, matrix Omega); real
multi_normal_prec_lupdf; (vectors y | row_vectors mu, matrix Omega); real
multi_normal_prec_lupdf; (vectors y | vectors mu, matrix Omega); real
multi_normal_rng; (row_vector mu, matrix Sigma); vector
multi_normal_rng; (row_vectors mu, matrix Sigma); vectors
multi_normal_rng; (vector mu, matrix Sigma); vector
multi_normal_rng; (vectors mu, matrix Sigma); vectors
multi_student_cholesky_t_rng; (real nu, vector mu, matrix L); vector
multi_student_t; ~; real
multi_student_t_cholesky; ~; real
multi_student_t_cholesky_lpdf; (vectors y | real nu, vectors mu, matrix L); real
multi_student_t_cholesky_lupdf; (vectors y | real nu, vectors mu, matrix L); real
multi_student_t_cholesky_rng; (real nu, array[] row_vector mu, matrix L); array[] vector
multi_student_t_cholesky_rng; (real nu, array[] vector mu, matrix L); array[] vector
multi_student_t_lpdf; (row_vectors y | real nu, row_vectors mu, matrix Sigma); real
multi_student_t_lpdf; (row_vectors y | real nu, vectors mu, matrix Sigma); real
multi_student_t_lpdf; (vectors y | real nu, row_vectors mu, matrix Sigma); real
multi_student_t_lpdf; (vectors y | real nu, vectors mu, matrix Sigma); real
multi_student_t_lupdf; (row_vectors y | real nu, row_vectors mu, matrix Sigma); real
multi_student_t_lupdf; (row_vectors y | real nu, vectors mu, matrix Sigma); real
multi_student_t_lupdf; (vectors y | real nu, row_vectors mu, matrix Sigma); real
multi_student_t_lupdf; (vectors y | real nu, vectors mu, matrix Sigma); real
multi_student_t_rng; (real nu, row_vector mu, matrix Sigma); vector
multi_student_t_rng; (real nu, row_vectors mu, matrix Sigma); vectors
multi_student_t_rng; (real nu, vector mu, matrix Sigma); vector
multi_student_t_rng; (real nu, vectors mu, matrix Sigma); vectors
multinomial; ~; real
multinomial_logit; ~; real
multinomial_logit_lpmf; (array[] int y | vector gamma); real
multinomial_logit_lupmf; (array[] int y | vector gamma); real
multinomial_logit_rng; (vector gamma, int N); array[] int
multinomial_lpmf; (array[] int y | vector theta); real
multinomial_lupmf; (array[] int y | vector theta); real
multinomial_rng; (vector theta, int N); array[] int
multiply_log; (T1 x, T2 y); R
multiply_log; (real x, real y); real
multiply_lower_tri_self_transpose; (matrix x); matrix
neg_binomial; ~; real
neg_binomial_2; ~; real
neg_binomial_2_cdf; (ints n, reals mu, reals phi); real
neg_binomial_2_lccdf; (ints n | reals mu, reals phi); real
neg_binomial_2_lcdf; (ints n | reals mu, reals phi); real
neg_binomial_2_log; ~; real
neg_binomial_2_log_glm; ~; real
neg_binomial_2_log_glm_lpmf; (array[] int y | matrix x, real alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lpmf; (array[] int y | matrix x, vector alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lpmf; (array[] int y | row_vector x, real alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lpmf; (array[] int y | row_vector x, vector alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lpmf; (int y | matrix x, real alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lpmf; (int y | matrix x, vector alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lupmf; (array[] int y | matrix x, real alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lupmf; (array[] int y | matrix x, vector alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lupmf; (array[] int y | row_vector x, real alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lupmf; (array[] int y | row_vector x, vector alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lupmf; (int y | matrix x, real alpha, vector beta, real phi); real
neg_binomial_2_log_glm_lupmf; (int y | matrix x, vector alpha, vector beta, real phi); real
neg_binomial_2_log_lpmf; (ints n | reals eta, reals phi); real
neg_binomial_2_log_lupmf; (ints n | reals eta, reals phi); real
neg_binomial_2_log_rng; (reals eta, reals phi); R
neg_binomial_2_lpmf; (ints n | reals mu, reals phi); real
neg_binomial_2_lupmf; (ints n | reals mu, reals phi); real
neg_binomial_2_rng; (reals mu, reals phi); R
neg_binomial_cdf; (ints n, reals alpha, reals beta); real
neg_binomial_lccdf; (ints n | reals alpha, reals beta); real
neg_binomial_lcdf; (ints n | reals alpha, reals beta); real
neg_binomial_lpmf; (ints n | reals alpha, reals beta); real
neg_binomial_lupmf; (ints n | reals alpha, reals beta); real
neg_binomial_rng; (reals alpha, reals beta); R
negative_infinity; (); real
norm1; (array[] real x); real
norm1; (row_vector x); real
norm1; (vector x); real
norm2; (array[] real x); real
norm2; (row_vector x); real
norm2; (vector x); real
norm; (complex z); real
normal; ~; real
normal_cdf; (reals y, reals mu, reals sigma); real
normal_id_glm; ~; real
normal_id_glm_lpdf; (real y | matrix x, real alpha, vector beta, real sigma); real
normal_id_glm_lpdf; (real y | matrix x, real alpha, vector beta, vector sigma); real
normal_id_glm_lpdf; (real y | matrix x, vector alpha, vector beta, real sigma); real
normal_id_glm_lpdf; (real y | matrix x, vector alpha, vector beta, vector sigma); real
normal_id_glm_lpdf; (vector y | matrix x, real alpha, vector beta, real sigma); real
normal_id_glm_lpdf; (vector y | matrix x, real alpha, vector beta, vector sigma); real
normal_id_glm_lpdf; (vector y | matrix x, vector alpha, vector beta, real sigma); real
normal_id_glm_lpdf; (vector y | matrix x, vector alpha, vector beta, vector sigma); real
normal_id_glm_lpdf; (vector y | row_vector x, real alpha, vector beta, real sigma); real
normal_id_glm_lpdf; (vector y | row_vector x, vector alpha, vector beta, real sigma); real
normal_id_glm_lupdf; (real y | matrix x, real alpha, vector beta, real sigma); real
normal_id_glm_lupdf; (real y | matrix x, real alpha, vector beta, vector sigma); real
normal_id_glm_lupdf; (real y | matrix x, vector alpha, vector beta, real sigma); real
normal_id_glm_lupdf; (real y | matrix x, vector alpha, vector beta, vector sigma); real
normal_id_glm_lupdf; (vector y | matrix x, real alpha, vector beta, real sigma); real
normal_id_glm_lupdf; (vector y | matrix x, real alpha, vector beta, vector sigma); real
normal_id_glm_lupdf; (vector y | matrix x, vector alpha, vector beta, real sigma); real
normal_id_glm_lupdf; (vector y | matrix x, vector alpha, vector beta, vector sigma); real
normal_id_glm_lupdf; (vector y | row_vector x, real alpha, vector beta, real sigma); real
normal_id_glm_lupdf; (vector y | row_vector x, vector alpha, vector beta, real sigma); real
normal_lccdf; (reals y | reals mu, reals sigma); real
normal_lcdf; (reals y | reals mu, reals sigma); real
normal_lpdf; (reals y | reals mu, reals sigma); real
normal_lupdf; (reals y | reals mu, reals sigma); real
normal_rng; (reals mu, reals sigma); R
not_a_number; (); real
num_elements; (array[] T x); int
num_elements; (complex_matrix x); int
num_elements; (complex_row_vector x); int
num_elements; (complex_vector x); int
num_elements; (matrix x); int
num_elements; (row_vector x); int
num_elements; (vector x); int
ode_adams; (function ode, vector initial_state, real initial_time, array[] real times, ...); array[] vector
ode_adams_tol; (function ode, vector initial_state, real initial_time, array[] real times, data real rel_tol, data real abs_tol, int max_num_steps, ...); array[] vector
ode_adjoint_tol_ctl; (function ode, vector initial_state, real initial_time, array[] real times, data real rel_tol_forward, data vector abs_tol_forward, data real rel_tol_backward, data vector abs_tol_backward, data real rel_tol_quadrature, data real abs_tol_qudrature, int max_num_steps, int num_steps_between_checkpoints, int interpolation_polynomial, int solver_forward, int solver_backward,...); array[] vector
ode_bdf; (function ode, vector initial_state, real initial_time, array[] real times, ...); array[] vector
ode_bdf_tol; (function ode, vector initial_state, real initial_time, array[] real times, data real rel_tol, data real abs_tol, int max_num_steps, ...); array[] vector
ode_ckrk; (function ode, vector initial_state, real initial_time, array[] real times, ...); array[] vector
ode_ckrk_tol; (function ode, vector initial_state, real initial_time, array[] real times, data real rel_tol, data real abs_tol, int max_num_steps, ...); array[] vector
ode_rk45; (function ode, vector initial_state, real initial_time, array[] real times, ...); array[] vector
ode_rk45_tol; (function ode, vector initial_state, real initial_time, array[] real times, data real rel_tol, data real abs_tol, int max_num_steps, ...); array[] vector
one_hot_array; (int n, int k); array[] real
one_hot_int_array; (int n, int k); array[] int
one_hot_row_vector; (int n, int k); row_vector
one_hot_vector; (int K, int k); vector
ones_array; (int n); array[] real
ones_int_array; (int n); array[] int
ones_row_vector; (int n); row_vector
ones_vector; (int n); vector
operator!; (int x); int
operator!; (real x); int
operator!=; (complex x, complex y); int
operator!=; (int x, int y); int
operator!=; (real x, real y); int
operator%/%; (int x, int y); int
operator%; (int x, int y); int
operator&&; (int x, int y); int
operator&&; (real x, real y); int
operator'; (complex_matrix x); complex_matrix
operator'; (complex_row_vector x); complex_vector
operator'; (complex_vector x); complex_row_vector
operator'; (matrix x); matrix
operator'; (row_vector x); vector
operator'; (vector x); row_vector
operator*; (complex x, complex y); complex
operator*; (complex x, complex_matrix y); complex_matrix
operator*; (complex x, complex_row_vector y); complex_row_vector
operator*; (complex x, complex_vector y); complex_vector
operator*; (complex_matrix x, complex y); complex_matrix
operator*; (complex_matrix x, complex_matrix y); complex_matrix
operator*; (complex_matrix x, complex_vector y); complex_vector
operator*; (complex_row_vector x, complex y); complex_row_vector
operator*; (complex_row_vector x, complex_matrix y); complex_row_vector
operator*; (complex_row_vector x, complex_vector y); complex
operator*; (complex_vector x, complex y); complex_vector
operator*; (complex_vector x, complex_row_vector y); complex_matrix
operator*; (int x, int y); int
operator*; (matrix x, matrix y); matrix
operator*; (matrix x, real y); matrix
operator*; (matrix x, vector y); vector
operator*; (real x, matrix y); matrix
operator*; (real x, real y); real
operator*; (real x, row_vector y); row_vector
operator*; (real x, vector y); vector
operator*; (row_vector x, matrix y); row_vector
operator*; (row_vector x, real y); row_vector
operator*; (row_vector x, vector y); real
operator*; (vector x, real y); vector
operator*; (vector x, row_vector y); matrix
operator*=; (T x, U y); void
operator*=; (complex x, complex y); void
operator+; (complex x, complex y); complex
operator+; (complex x, complex_matrix y); complex_matrix
operator+; (complex x, complex_row_vector y); complex_row_vector
operator+; (complex x, complex_vector y); complex_vector
operator+; (complex z); complex
operator+; (complex_matrix x, complex y); complex_matrix
operator+; (complex_matrix x, complex_matrix y); complex_matrix
operator+; (complex_row_vector x, complex y); complex_row_vector
operator+; (complex_row_vector x, complex_row_vector y); complex_row_vector
operator+; (complex_vector x, complex y); complex_vector
operator+; (complex_vector x, complex_vector y); complex_vector
operator+; (int x); int
operator+; (int x, int y); int
operator+; (matrix x, matrix y); matrix
operator+; (matrix x, real y); matrix
operator+; (real x); real
operator+; (real x, matrix y); matrix
operator+; (real x, real y); real
operator+; (real x, row_vector y); row_vector
operator+; (real x, vector y); vector
operator+; (row_vector x, real y); row_vector
operator+; (row_vector x, row_vector y); row_vector
operator+; (vector x, real y); vector
operator+; (vector x, vector y); vector
operator+=; (T x, U y); void
operator+=; (complex x, complex y); void
operator-; (T x); T
operator-; (complex x, complex y); complex
operator-; (complex x, complex_matrix y); complex_matrix
operator-; (complex x, complex_row_vector y); complex_row_vector
operator-; (complex x, complex_vector y); complex_vector
operator-; (complex z); complex
operator-; (complex_matrix x); complex_matrix
operator-; (complex_matrix x, complex y); complex_matrix
operator-; (complex_matrix x, complex_matrix y); complex_matrix
operator-; (complex_row_vector x); complex_row_vector
operator-; (complex_row_vector x, complex y); complex_row_vector
operator-; (complex_row_vector x, complex_row_vector y); complex_row_vector
operator-; (complex_vector x); complex_vector
operator-; (complex_vector x, complex y); complex_vector
operator-; (complex_vector x, complex_vector y); complex_vector
operator-; (int x); int
operator-; (int x, int y); int
operator-; (matrix x); matrix
operator-; (matrix x, matrix y); matrix
operator-; (matrix x, real y); matrix
operator-; (real x); real
operator-; (real x, matrix y); matrix
operator-; (real x, real y); real
operator-; (real x, row_vector y); row_vector
operator-; (real x, vector y); vector
operator-; (row_vector x); row_vector
operator-; (row_vector x, real y); row_vector
operator-; (row_vector x, row_vector y); row_vector
operator-; (vector x); vector
operator-; (vector x, real y); vector
operator-; (vector x, vector y); vector
operator-=; (T x, U y); void
operator-=; (complex x, complex y); void
operator.*; (complex_matrix x, complex_matrix y); complex_matrix
operator.*; (complex_row_vector x, complex_row_vector y); complex_row_vector
operator.*; (complex_vector x, complex_vector y); complex_vector
operator.*; (matrix x, matrix y); matrix
operator.*; (row_vector x, row_vector y); row_vector
operator.*; (vector x, vector y); vector
operator.*=; (T x, U y); void
operator./; (complex x, complex_matrix y); complex_matrix
operator./; (complex x, complex_row_vector y); complex_row_vector
operator./; (complex x, complex_vector y); complex_vector
operator./; (complex_matrix x, complex y); complex_matrix
operator./; (complex_matrix x, complex_matrix y); complex_matrix
operator./; (complex_row_vector x, complex y); complex_row_vector
operator./; (complex_row_vector x, complex_row_vector y); complex_row_vector
operator./; (complex_vector x, complex y); complex_vector
operator./; (complex_vector x, complex_vector y); complex_vector
operator./; (matrix x, matrix y); matrix
operator./; (matrix x, real y); matrix
operator./; (real x, matrix y); matrix
operator./; (real x, row_vector y); row_vector
operator./; (real x, vector y); vector
operator./; (row_vector x, real y); row_vector
operator./; (row_vector x, row_vector y); row_vector
operator./; (vector x, real y); vector
operator./; (vector x, vector y); vector
operator./=; (T x, U y); void
operator.^; ( complex_matrix x, complex y); complex_matrix
operator.^; ( complex_matrix x, complex_matrix y); complex_matrix
operator.^; (complex x, complex_matrix y); complex_matrix
operator.^; (complex x, complex_row_vector y); complex_row_vector
operator.^; (complex x, complex_vector y); complex_vector
operator.^; (complex_row_vector x, complex y); complex_row_vector
operator.^; (complex_row_vector x, complex_row_vector y); complex_row_vector
operator.^; (complex_vector x, complex y); complex_vector
operator.^; (complex_vector x, complex_vector y); complex_vector
operator.^; (matrix x, matrix y); matrix
operator.^; (matrix x, real y); matrix
operator.^; (real x, matrix y); matrix
operator.^; (real x, row_vector y); row_vector
operator.^; (real x, vector y); vector
operator.^; (row_vector x, real y); row_vector
operator.^; (row_vector x, row_vector y); row_vector
operator.^; (vector x, real y); vector
operator.^; (vector x, vector y); vector
operator/; (complex x, complex y); complex
operator/; (complex_matrix B, complex_matrix A); complex_matrix
operator/; (complex_matrix x, complex y); complex_matrix
operator/; (complex_row_vector b, complex_matrix A); complex_row_vector
operator/; (complex_row_vector x, complex y); complex_row_vector
operator/; (complex_vector x, complex y); complex_vector
operator/; (int x, int y); int
operator/; (matrix B, matrix A); matrix
operator/; (matrix x, real y); matrix
operator/; (real x, real y); real
operator/; (row_vector b, matrix A); row_vector
operator/; (row_vector x, real y); row_vector
operator/; (vector x, real y); vector
operator/=; (T x, U y); void
operator/=; (complex x, complex y); void
operator<; (int x, int y); int
operator<; (real x, real y); int
operator<=; (int x, int y); int
operator<=; (real x, real y); int
operator=; (complex x, complex y); void
operator==; (complex x, complex y); int
operator==; (int x, int y); int
operator==; (real x, real y); int
operator>; (int x, int y); int
operator>; (real x, real y); int
operator>=; (int x, int y); int
operator>=; (real x, real y); int
operator\; (matrix A, matrix B); matrix
operator\; (matrix A, vector b); vector
operator^; (complex x, complex y); complex
operator^; (real x, real y); real
operator||; (int x, int y); int
operator||; (real x, real y); int
ordered_logistic; ~; real
ordered_logistic_glm_lpmf; (array[] int y | matrix x, vector beta, vector c); real
ordered_logistic_glm_lpmf; (array[] int y | row_vector x, vector beta, vector c); real
ordered_logistic_glm_lpmf; (int y | matrix x, vector beta, vector c); real
ordered_logistic_glm_lpmf; (int y | row_vector x, vector beta, vector c); real
ordered_logistic_glm_lupmf; (array[] int y | matrix x, vector beta, vector c); real
ordered_logistic_glm_lupmf; (array[] int y | row_vector x, vector beta, vector c); real
ordered_logistic_glm_lupmf; (int y | matrix x, vector beta, vector c); real
ordered_logistic_glm_lupmf; (int y | row_vector x, vector beta, vector c); real
ordered_logistic_lpmf; (ints k | vector eta, vectors c); real
ordered_logistic_lupmf; (ints k | vector eta, vectors c); real
ordered_logistic_rng; (real eta, vector c); int
ordered_probit; ~; real
ordered_probit_lpmf; (ints k | real eta, vectors c); real
ordered_probit_lpmf; (ints k | vector eta, vectors c); real
ordered_probit_lupmf; (ints k | real eta, vectors c); real
ordered_probit_lupmf; (ints k | vector eta, vectors c); real
ordered_probit_rng; (real eta, vector c); int
owens_t; (T1 x, T2 y); R
owens_t; (real h, real a); real
pareto; ~; real
pareto_cdf; (reals y, reals y_min, reals alpha); real
pareto_lccdf; (reals y | reals y_min, reals alpha); real
pareto_lcdf; (reals y | reals y_min, reals alpha); real
pareto_lpdf; (reals y | reals y_min, reals alpha); real
pareto_lupdf; (reals y | reals y_min, reals alpha); real
pareto_rng; (reals y_min, reals alpha); R
pareto_type_2; ~; real
pareto_type_2_cdf; (reals y, reals mu, reals lambda, reals alpha); real
pareto_type_2_lccdf; (reals y | reals mu, reals lambda, reals alpha); real
pareto_type_2_lcdf; (reals y | reals mu, reals lambda, reals alpha); real
pareto_type_2_lpdf; (reals y | reals mu, reals lambda, reals alpha); real
pareto_type_2_lupdf; (reals y | reals mu, reals lambda, reals alpha); real
pareto_type_2_rng; (reals mu, reals lambda, reals alpha); R
pi; (); real
poisson; ~; real
poisson_cdf; (ints n, reals lambda); real
poisson_lccdf; (ints n | reals lambda); real
poisson_lcdf; (ints n | reals lambda); real
poisson_log; ~; real
poisson_log_glm; ~; real
poisson_log_glm_lpmf; (array[] int y | matrix x, real alpha, vector beta); real
poisson_log_glm_lpmf; (array[] int y | matrix x, vector alpha, vector beta); real
poisson_log_glm_lpmf; (array[] int y | row_vector x, real alpha, vector beta); real
poisson_log_glm_lpmf; (array[] int y | row_vector x, vector alpha, vector beta); real
poisson_log_glm_lpmf; (int y | matrix x, real alpha, vector beta); real
poisson_log_glm_lpmf; (int y | matrix x, vector alpha, vector beta); real
poisson_log_glm_lupmf; (array[] int y | matrix x, real alpha, vector beta); real
poisson_log_glm_lupmf; (array[] int y | matrix x, vector alpha, vector beta); real
poisson_log_glm_lupmf; (array[] int y | row_vector x, real alpha, vector beta); real
poisson_log_glm_lupmf; (array[] int y | row_vector x, vector alpha, vector beta); real
poisson_log_glm_lupmf; (int y | matrix x, real alpha, vector beta); real
poisson_log_glm_lupmf; (int y | matrix x, vector alpha, vector beta); real
poisson_log_lpmf; (ints n | reals alpha); real
poisson_log_lupmf; (ints n | reals alpha); real
poisson_log_rng; (reals alpha); R
poisson_lpmf; (ints n | reals lambda); real
poisson_lupmf; (ints n | reals lambda); real
poisson_rng; (reals lambda); R
polar; (real r, real theta); complex
positive_infinity; (); real
pow; (T1 x, T2 y); R
pow; (T1 x, T2 y); Z
pow; (complex x, complex y); complex
pow; (real x, real y); real
print; (T1 x1,..., TN xN); void
prod; (array[] int x); real
prod; (array[] real x); real
prod; (complex_matrix x); complex
prod; (complex_row_vector x); complex
prod; (complex_vector x); complex
prod; (matrix x); real
prod; (row_vector x); real
prod; (vector x); real
proj; (complex z); complex
qr_Q; (matrix A); matrix
qr_R; (matrix A); matrix
qr_thin_Q; (matrix A); matrix
qr_thin_R; (matrix A); matrix
quad_form; (matrix A, matrix B); matrix
quad_form; (matrix A, vector B); real
quad_form_diag; (matrix m, row_vector rv); matrix
quad_form_diag; (matrix m, vector v); matrix
quad_form_sym; (matrix A, matrix B); matrix
quad_form_sym; (matrix A, vector B); real
quantile; (data array[] real x, data array[] real p); array[] real
quantile; (data array[] real x, data real p); real
quantile; (data row_vector x, data array[] real p); array[] real
quantile; (data row_vector x, data real p); real
quantile; (data vector x, data array[] real p); array[] real
quantile; (data vector x, data real p); real
rank; (array[] int v, int s); int
rank; (array[] real v, int s); int
rank; (row_vector v, int s); int
rank; (vector v, int s); int
rayleigh; ~; real
rayleigh_cdf; (real y, real sigma); real
rayleigh_lccdf; (real y | real sigma); real
rayleigh_lcdf; (real y | real sigma); real
rayleigh_lpdf; (reals y | reals sigma); real
rayleigh_lupdf; (reals y | reals sigma); real
rayleigh_rng; (reals sigma); R
reduce_sum; (F f, array[] T x, int grainsize, T1 s1, T2 s2, ...); real
reject; (T1 x1,..., TN xN); void
rep_array; (T x, int k, int m, int n); array[,,] T
rep_array; (T x, int m, int n); array[,] T
rep_array; (T x, int n); array[] T
rep_matrix; (complex z, int m, int n); complex_matrix
rep_matrix; (complex_row_vector rv, int m); complex_matrix
rep_matrix; (complex_vector v, int n); complex_matrix
rep_matrix; (real x, int m, int n); matrix
rep_matrix; (row_vector rv, int m); matrix
rep_matrix; (vector v, int n); matrix
rep_row_vector; (complex z, int n); complex_row_vector
rep_row_vector; (real x, int n); row_vector
rep_vector; (complex z, int m); complex_vector
rep_vector; (real x, int m); vector
reverse; (array[] T v); array[] T
reverse; (complex_row_vector v); complex_row_vector
reverse; (complex_vector v); complex_vector
reverse; (row_vector v); row_vector
reverse; (vector v); vector
rising_factorial; (T1 x, T2 y); R
rising_factorial; (real x, int n); real
round; (T x); R
row; (complex_matrix x, int m); complex_row_vector
row; (matrix x, int m); row_vector
rows; (complex_matrix x); int
rows; (complex_row_vector x); int
rows; (complex_vector x); int
rows; (matrix x); int
rows; (row_vector x); int
rows; (vector x); int
rows_dot_product; (complex_matrix x, complex_matrix y); complex_vector
rows_dot_product; (complex_row_vector x, complex_row_vector y); complex_vector
rows_dot_product; (complex_vector x, complex_vector y); complex_vector
rows_dot_product; (matrix x, matrix y); vector
rows_dot_product; (row_vector x, row_vector y); vector
rows_dot_product; (vector x, vector y); vector
rows_dot_self; (complex_matrix x); complex_vector
rows_dot_self; (complex_row_vector x); complex_vector
rows_dot_self; (complex_vector x); complex_vector
rows_dot_self; (matrix x); vector
rows_dot_self; (row_vector x); vector
rows_dot_self; (vector x); vector
scale_matrix_exp_multiply; (real t, matrix A, matrix B); matrix
scaled_inv_chi_square; ~; real
scaled_inv_chi_square_cdf; (reals y, reals nu, reals sigma); real
scaled_inv_chi_square_lccdf; (reals y | reals nu, reals sigma); real
scaled_inv_chi_square_lcdf; (reals y | reals nu, reals sigma); real
scaled_inv_chi_square_lpdf; (reals y | reals nu, reals sigma); real
scaled_inv_chi_square_lupdf; (reals y | reals nu, reals sigma); real
scaled_inv_chi_square_rng; (reals nu, reals sigma); R
sd; (array[] real x); real
sd; (matrix x); real
sd; (row_vector x); real
sd; (vector x); real
segment; (array[] T sv, int i, int n); array[] T
segment; (complex_row_vector rv, int i, int n); complex_row_vector
segment; (complex_vector v, int i, int n); complex_vector
segment; (row_vector rv, int i, int n); row_vector
segment; (vector v, int i, int n); vector
sin; (T x); R
sin; (complex z); complex
singular_values; (complex_matrix A); vector
singular_values; (matrix A); vector
sinh; (T x); R
sinh; (complex z); complex
size; (array[] T x); int
size; (complex_row_vector x); int
size; (complex_vector x); int
size; (int x); int
size; (matrix x); int
size; (real x); int
size; (row_vector x); int
size; (vector x); int
skew_double_exponential; ~; real
skew_double_exponential_cdf; (reals y, reals mu, reals sigma, reals tau); real
skew_double_exponential_lccdf; (reals y | reals mu, reals sigma, reals tau); real
skew_double_exponential_lcdf; (reals y | reals mu, reals sigma, reals tau); real
skew_double_exponential_lpdf; (reals y | reals mu, reals sigma, reals tau); real
skew_double_exponential_lupdf; (reals y | reals mu, reals sigma, reals tau); real
skew_double_exponential_rng; (reals mu, reals sigma); R
skew_normal; ~; real
skew_normal_cdf; (reals y, reals xi, reals omega, reals alpha); real
skew_normal_lccdf; (reals y | reals xi, reals omega, reals alpha); real
skew_normal_lcdf; (reals y | reals xi, reals omega, reals alpha); real
skew_normal_lpdf; (reals y | reals xi, reals omega, reals alpha); real
skew_normal_lupdf; (reals y | reals xi, reals omega, reals alpha); real
skew_normal_rng; (reals xi, reals omega, real alpha); R
softmax; (vector x); vector
sort_asc; (array[] int v); array[] int
sort_asc; (array[] real v); array[] real
sort_asc; (row_vector v); row_vector
sort_asc; (vector v); vector
sort_desc; (array[] int v); array[] int
sort_desc; (array[] real v); array[] real
sort_desc; (row_vector v); row_vector
sort_desc; (vector v); vector
sort_indices_asc; (array[] int v); array[] int
sort_indices_asc; (array[] real v); array[] int
sort_indices_asc; (row_vector v); array[] int
sort_indices_asc; (vector v); array[] int
sort_indices_desc; (array[] int v); array[] int
sort_indices_desc; (array[] real v); array[] int
sort_indices_desc; (row_vector v); array[] int
sort_indices_desc; (vector v); array[] int
sqrt2; (); real
sqrt; (T x); R
sqrt; (complex x); complex
square; (T x); R
squared_distance; (row_vector x, row_vector y); real
squared_distance; (row_vector x, vector y); real
squared_distance; (vector x, row_vector y); real
squared_distance; (vector x, vector y); real
std_normal; ~; real
std_normal_cdf; (reals y); real
std_normal_lccdf; (reals y); real
std_normal_lcdf; (reals y); real
std_normal_log_qf; (T x); R
std_normal_lpdf; (reals y); real
std_normal_lupdf; (reals y); real
std_normal_qf; (T x); R
std_normal_rng; (); real
step; (real x); real
student_t; ~; real
student_t_cdf; (reals y, reals nu, reals mu, reals sigma); real
student_t_lccdf; (reals y | reals nu, reals mu, reals sigma); real
student_t_lcdf; (reals y | reals nu, reals mu, reals sigma); real
student_t_lpdf; (reals y | reals nu, reals mu, reals sigma); real
student_t_lupdf; (reals y | reals nu, reals mu, reals sigma); real
student_t_rng; (reals nu, reals mu, reals sigma); R
sub_col; (complex_matrix x, int i, int j, int n_rows); complex_vector
sub_col; (matrix x, int i, int j, int n_rows); vector
sub_row; (complex_matrix x, int i, int j, int n_cols); complex_row_vector
sub_row; (matrix x, int i, int j, int n_cols); row_vector
sum; (array[] complex x); complex
sum; (array[] int x); int
sum; (array[] real x); real
sum; (complex_matrix x); complex
sum; (complex_row_vector x); complex
sum; (complex_vector x); complex
sum; (matrix x); real
sum; (row_vector x); real
sum; (vector x); real
svd_U; (complex_matrix A); complex_matrix
svd_U; (matrix A); matrix
svd_V; (complex_matrix A); complex_matrix
svd_V; (matrix A); matrix
symmetrize_from_lower_tri; (complex_matrix A); complex_matrix
symmetrize_from_lower_tri; (matrix A); matrix
tail; (array[] T sv, int n); array[] T
tail; (complex_row_vector rv, int n); complex_row_vector
tail; (complex_vector v, int n); complex_vector
tail; (row_vector rv, int n); row_vector
tail; (vector v, int n); vector
tan; (T x); R
tan; (complex z); complex
tanh; (T x); R
tanh; (complex z); complex
target; (); real
tcrossprod; (matrix x); matrix
tgamma; (T x); R
to_array_1d; (array[...] complex a); array[] complex
to_array_1d; (array[...] int a); array[] int
to_array_1d; (array[...] real a); array[] real
to_array_1d; (complex_matrix m); array[] complex
to_array_1d; (complex_row_vector v); array[] complex
to_array_1d; (complex_vector v); array[] real
to_array_1d; (matrix m); array[] real
to_array_1d; (row_vector v); array[] real
to_array_1d; (vector v); array[] real
to_array_2d; (complex_matrix m); array[,] real
to_array_2d; (matrix m); array[,] real
to_complex; (); complex
to_complex; (T1 re, T2 im); Z
to_complex; (real re); complex
to_complex; (real re, real im); complex
to_int; (data real x); int
to_matrix; (array[,] complex a ); complex_matrix
to_matrix; (array[,] int a); matrix
to_matrix; (array[,] real a); matrix
to_matrix; (array[] complex a, int m, int n); complex_matrix
to_matrix; (array[] complex a, int m, int n, int col_major); complex_matrix
to_matrix; (array[] complex_row_vector vs); complex_matrix
to_matrix; (array[] int a, int m, int n); matrix
to_matrix; (array[] int a, int m, int n, int col_major); matrix
to_matrix; (array[] real a, int m, int n); matrix
to_matrix; (array[] real a, int m, int n, int col_major); matrix
to_matrix; (array[] row_vector vs); matrix
to_matrix; (complex_matrix A, int m, int n, int col_major); complex_matrix
to_matrix; (complex_matrix M, int m, int n); complex_matrix
to_matrix; (complex_matrix m); complex_matrix
to_matrix; (complex_row_vector v); complex_matrix
to_matrix; (complex_row_vector v, int m, int n); complex_matrix
to_matrix; (complex_row_vector v, int m, int n, int col_major); complex_matrix
to_matrix; (complex_vector v); complex_matrix
to_matrix; (complex_vector v, int m, int n); complex_matrix
to_matrix; (complex_vector v, int m, int n, int col_major); complex_matrix
to_matrix; (matrix A, int m, int n, int col_major); matrix
to_matrix; (matrix M, int m, int n); matrix
to_matrix; (matrix m); matrix
to_matrix; (row_vector v); matrix
to_matrix; (row_vector v, int m, int n); matrix
to_matrix; (row_vector v, int m, int n, int col_major); matrix
to_matrix; (vector v); matrix
to_matrix; (vector v, int m, int n); matrix
to_matrix; (vector v, int m, int n, int col_major); matrix
to_row_vector; (array[] complex a); complex_row_vector
to_row_vector; (array[] int a); row_vector
to_row_vector; (array[] real a); row_vector
to_row_vector; (complex_matrix m); complex_row_vector
to_row_vector; (complex_row_vector v); complex_row_vector
to_row_vector; (complex_vector v); complex_row_vector
to_row_vector; (matrix m); row_vector
to_row_vector; (row_vector v); row_vector
to_row_vector; (vector v); row_vector
to_vector; (array[] complex a); complex_vector
to_vector; (array[] int a); vector
to_vector; (array[] real a); vector
to_vector; (complex_matrix m); complex_vector
to_vector; (complex_row_vector v); complex_vector
to_vector; (complex_vector v); complex_vector
to_vector; (matrix m); vector
to_vector; (row_vector v); vector
to_vector; (vector v); vector
trace; (complex_matrix A); complex
trace; (matrix A); real
trace_gen_quad_form; (matrix D,matrix A, matrix B); real
trace_quad_form; (matrix A, matrix B); real
trigamma; (T x); R
trunc; (T x); R
uniform; ~; real
uniform_cdf; (reals y, reals alpha, reals beta); real
uniform_lccdf; (reals y | reals alpha, reals beta); real
uniform_lcdf; (reals y | reals alpha, reals beta); real
uniform_lpdf; (reals y | reals alpha, reals beta); real
uniform_lupdf; (reals y | reals alpha, reals beta); real
uniform_rng; (reals alpha, reals beta); R
uniform_simplex; (int n); vector
variance; (array[] real x); real
variance; (matrix x); real
variance; (row_vector x); real
variance; (vector x); real
von_mises; ~; real
von_mises_cdf; (reals y | reals mu, reals kappa); real
von_mises_lccdf; (reals y | reals mu, reals kappa); real
von_mises_lcdf; (reals y | reals mu, reals kappa); real
von_mises_lpdf; (reals y | reals mu, reals kappa); real
von_mises_lupdf; (reals y | reals mu, reals kappa); real
von_mises_rng; (reals mu, reals kappa); R
weibull; ~; real
weibull_cdf; (reals y, reals alpha, reals sigma); real
weibull_lccdf; (reals y | reals alpha, reals sigma); real
weibull_lcdf; (reals y | reals alpha, reals sigma); real
weibull_lpdf; (reals y | reals alpha, reals sigma); real
weibull_lupdf; (reals y | reals alpha, reals sigma); real
weibull_rng; (reals alpha, reals sigma); R
wiener; ~; real
wiener_lpdf; (reals y | reals alpha, reals tau, reals beta, reals delta); real
wiener_lupdf; (reals y | reals alpha, reals tau, reals beta, reals delta); real
wishart; ~; real
wishart_cholesky_lpdf; (matrix L_W | real nu, matrix L_S); real
wishart_cholesky_lupdf; (matrix L_W | real nu, matrix L_S); real
wishart_cholesky_rng; (real nu, matrix L_S); matrix
wishart_lpdf; (matrix W | real nu, matrix Sigma); real
wishart_lupdf; (matrix W | real nu, matrix Sigma); real
wishart_rng; (real nu, matrix Sigma); matrix
zeros_array; (int n); array[] real
zeros_int_array; (int n); array[] int
zeros_row_vector; (int n); row_vector
zeros_row_vector; (int n); vector
